name: telegram github quiz
on: 
  schedule:
    - cron: "0 */10 * * *"
    # Each 10hours to have at least 2 quiz questions per day (24h)
    # Note that this cron value will influence the behavior of the report_quiz
    # make sure to check the overall working after each modification

jobs:
  build:
    defaults:
      run:
        working-directory: ./.github/workflows/report_quiz

    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Config the environment variable
        shell: bash
        run: |
          echo "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}" >> env.sh
          echo "TELEGRAM_CHAT_ID=${{ secrets.TELEGRAM_OSSCAMEROON_GROUP_ID }}" >> env.sh
          echo "QUIZAPI_KEY=${{ secrets.QUIZAPI_KEY }}" >> env.sh
      
      - name: Load the database
        run: |
            git init
            git remote add origin https://${{ secrets.REPORTQUIZ_DATA_REPO_TOKEN }}@github.com/osscameroon/reportquiz_data.git
            git pull origin main
            git switch -c main

      - name: Fetch quizzes user answers
        shell: bash
        run: |
          source main.sh
          # update the quiz database
          fetch_quiz_user_answers

      - name: Automate the management of the competition
        shell: bash
        run: |
          source main.sh
          # start a new competition each monday morning
          if [ $(date +%a_%p) == Mon_AM ]; then start_quiz_competition; fi
          # end the competition each sunday evening
          if [ $(date +%a_%p) == Sun_PM ]; then
            stop_quiz_competition
            touch /tmp/skip_send_quiz
          fi

      - name: Send quiz to the group
        shell: bash
        run: |
          source main.sh
          # send a new quiz
          test -f /tmp/skip_send_quiz || send_quiz
 
      - name: Update the database
        shell: bash
        run: |
          if [ ! -z "$(git status -s --ignored archive database)" ]; then
            git config user.name "osscameroon"
            git config user.email "bot@osscameroon.com"
            if [ -d database ]; then git add database -f; fi
            if [ -d archive ]; then git add archive -f; fi
            git commit -m "update"
            git push origin main
          fi

